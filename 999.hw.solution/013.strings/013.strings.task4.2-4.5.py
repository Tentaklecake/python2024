### Task4.2: Преобразование в двоичную систему - 1
# Сделать преобразование в двоичную систему **без** использования функции `bin()` трех чисел:
# - 42
# - 32
# - 255
bin1 = f"{42:b}"
bin2 = f"{32:b}"
bin3 = f"{255:b}"

### Task4.3: Преобразование в двоичную систему - 2
# Сделать преобразование в двоичную систему **без** использования функции `bin()` трех чисел (42/32/255 из прошлого задания),
# дополнив при этом количество бит до 8 нулями слева (11 -> 00001011).

bin1 = f"{42:08b}"
bin2 = f"{32:08b}"
bin3 = f"{255:08b}"

### Task4.4: Преобразование в двоичную систему - 3
# Получить полное двоичное представление ip адреса (т.е. без разделения на октеты): 10.23.43.234 -> 00001010000101110010101111101010.

ip = "10.23.43.234"
ip_octets = ip.split(".")
# циклы не знаем еще, поэтому делаем копипастой
bin_octet1 = f"{int(ip_octets[0]):08b}"
bin_octet2 = f"{int(ip_octets[1]):08b}"
bin_octet3 = f"{int(ip_octets[2]):08b}"
bin_octet4 = f"{int(ip_octets[3]):08b}"

result = bin_octet1 + bin_octet2 + bin_octet2 + bin_octet4

### Task4.5: RTP запись
# Сформировать RTP запись для адресов:
# - "77.88.55.242" -> "242.55.88.77.in-addr.arpa"
# - "192.1.2.100" -> "100.2.1.192.in-addr.arpa"

ip = "77.88.55.242"
ip_octets = ip.split(".")
rtp = ".".join(ip_octets[::-1]) + ".in-addr.arpa"

ip = "192.1.2.100"
ip_octets = ip.split(".")
rtp = ".".join(ip_octets[::-1]) + ".in-addr.arpa"
