from concurrent.futures import ThreadPoolExecutor
from getpass import getpass
from itertools import repeat

import yaml


def send_show(device_dict, command):
    pass


def send_command_to_devices(creds : dict, command : str , max_workers = 10) -> str:
    data = {}
    with open("devices.yaml") as f:
        devices = yaml.safe_load(f)
    for device in devices:
        device.update(creds)
    with ThreadPoolExecutor(max_workers=max_workers) as executor:
        result = executor.map(send_show, devices, repeat(command))
        for device, output in zip(devices, result):
            data[device["host"]] = output
    return data


if __name__ == "__main__":
    username = input("Username: ")
    password = getpass("Password: ")
    command = input("Input command: ")
    creds = {"username" : username, "password" : password}
    print(send_command_to_devices(creds, command))